include ../timefield/timefield.pug
include ../button/button.pug

append styles
  link(rel='stylesheet', href='../../components/table/table.less')
append skripts
  //- script(type='module', src='../../components/table/table.js')
  //- script(type='module', src='~/knockout-3.5.1.js')
  script(type='module', src='../../components/table/table_new.ts')

append mixins
  mixin table(options = {})
    -
      options.class = options.class ? `table ${options.class}` : `table `;
      const mod = options.mod ? options.mod.trim().split(/[,\s]\s*/) : [];
      options.class += options.mod ? ` table-${mod.join(` table-`)} ` : '';
      delete options.mod;
      // if (mod.includes('colored')) {};
      const timeBegin = (function() {
        let temp = isFinite(options.timeBegin) ? options.timeBegin : 0;
        if (temp < 0) temp = 0;
        if (temp >= 24) temp = 23.99;
        // temp = Math.floor(temp) + Math.round(temp % 1)*0.5;
        return temp;
      })();
      delete options.timeBegin;
      const timeEnd = (function() {
        let temp = isFinite(options.timeEnd) ? options.timeEnd : timeBegin;
        if (temp < 0) temp = 0;
        if (temp >= 24) temp = 23.99;
        // temp = Math.floor(temp) + Math.round(temp % 1)*0.5;
        return temp;
      })();
      delete options.timeEnd;

      const days = {
        mon:  'Пн',
        tues: 'Вт',
        wed:  'Ср',
        thurs:'Чт',
        fri:  'Пт',
        sat:  'Сб',
        sun:  'Вс',
      };
      let times = [];
      for (let n = 0; n <= 1; n++)
        for(let c = 0; c < 24; c += 0.5)
          times.push(`${c}`);
      let beginComplited = false;
      let endComplited = false;

    div()&attributes(options)&attributes(attributes)
      .table__title
        span('data-bind'='text: $end')='Задать интервал таблицы'
        +timefield({class:'table__time_begin','data-bind':'Value: begin'})
        span!='&mdash;'
        +timefield({class:'table__time_end','data-bind':'value: end'})
      .table__workspace
        table(border='1')
          colgroup
            col.table__day_names(span='1')
          tr.table__time_names
            td
            -
              beginComplited = false;
              endComplited = false;
            each time in times
              -
                if ((Math.floor(timeBegin) + Math.round(timeBegin % 1)*0.5) == time) beginComplited = true;
                if ((Math.floor(timeEnd  ) + Math.round(timeEnd   % 1)*0.5) == time) endComplited = true;
              th('data-time'=time, class=`table__col_${Math.trunc(time)}_${(time%1)}`, class= beginComplited && !endComplited ? '' : 'table__col-hidden')=`${Math.trunc(time)}`
                sup=`${(time%1) * 6}0`

          each day, enDay in days
            tr
              th(class=`table__day_name${enDay}`)=day
              -
                beginComplited = false;
                endComplited = false;
              each time in times
                -
                  if ((Math.floor(timeBegin) + Math.round(timeBegin % 1)*0.5) == time) beginComplited = true;
                  if ((Math.floor(timeEnd  ) + Math.round(timeEnd   % 1)*0.5) == time) endComplited = true;
                td('data-time'=time, class=`table__col_${Math.trunc(time)}_${(time%1)}`, class= beginComplited && !endComplited ? '' : 'table__col-hidden', class='table__item')=` `



      .table__buttons_container
          .table__buttons
            +button({block_class: 'table__button_fill', text:'Заполнить автоматически', mod:'slim'})
            +button({block_class: 'table__button_clear',text:'Очистить', mod:'slim'})
